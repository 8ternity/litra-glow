{"version":3,"file":"driver-BUJgd4GA.js","sources":["../../node_modules/node-hid/binding-options.js","../../node_modules/pkg-prebuilds/lib/prebuild.js","../../node_modules/pkg-prebuilds/bindings.js","../../node_modules/node-hid/nodehid.js","../../node_modules/litra/dist/esm/utils.js","../../node_modules/litra/dist/esm/driver.js"],"sourcesContent":["module.exports = {\r\n    name: 'HID',\r\n    napi_versions: [3],\r\n}","const fs = require('fs')\n\n/**\n * Generate the filename of the prebuild file.\n * The format of the name is possible to calculate based on some options\n * @param {object} options\n * @returns\n */\nfunction getPrebuildName(options) {\n\tif (!options.napi_version) throw new Error('NAN not implemented') // TODO\n\n\tconst tokens = [\n\t\toptions.name,\n\t\toptions.platform,\n\t\toptions.arch,\n\t\t// options.armv ? (options.arch === 'arm64' ? '8' : vars.arm_version) : null,\n\t\toptions.libc && options.platform === 'linux' ? options.libc : null,\n\t]\n\treturn `${tokens.filter((t) => !!t).join('-')}/${options.runtime}-napi-v${options.napi_version}.node`\n}\n\nfunction isNwjs() {\n\treturn !!(process.versions && process.versions.nw)\n}\n\nfunction isElectron() {\n\tif (process.versions && process.versions.electron) return true\n\tif (process.env.ELECTRON_RUN_AS_NODE) return true\n\treturn typeof window !== 'undefined' && window.process && window.process.type === 'renderer'\n}\n\nfunction isAlpine(platform) {\n\treturn platform === 'linux' && fs.existsSync('/etc/alpine-release')\n}\n\nmodule.exports = {\n\tgetPrebuildName,\n\tisNwjs,\n\tisElectron,\n\tisAlpine,\n}\n","const path = require('path')\nconst os = require('os')\nconst { getPrebuildName, isNwjs, isElectron, isAlpine } = require('./lib/prebuild')\n\n// Jest can allow users to mock 'fs', but we need the real fs\nconst fs = typeof jest !== 'undefined' ? jest.requireActual('fs') : require('fs')\n\n// Workaround to fix webpack's build warnings: 'the request of a dependency is an expression'\nconst runtimeRequire = typeof __webpack_require__ === 'function' ? __non_webpack_require__ : require // eslint-disable-line\n\n/**\n * Find the best path to the binding file\n * @param {string} basePath - Base path of the module, where binaries will be located\n * @param {object} options - Describe how the prebuilt binary is named\n * @param {boolean} verifyPrebuild - True if we are verifying that a prebuild exists\n * @param {boolean} throwOnMissing - True if an error should be thrown when the binary is missing\n * @returns\n */\nfunction resolvePath(basePath, options, verifyPrebuild, throwOnMissing) {\n\tif (typeof basePath !== 'string' || !basePath) throw new Error(`Invalid basePath to pkg-prebuilds`)\n\n\tif (typeof options !== 'object' || !options) throw new Error(`Invalid options to pkg-prebuilds`)\n\tif (typeof options.name !== 'string' || !options.name) throw new Error(`Invalid name to pkg-prebuilds`)\n\n\tlet isNodeApi = false\n\tif (options.napi_versions && Array.isArray(options.napi_versions)) {\n\t\tisNodeApi = true\n\t}\n\n\tconst arch = (verifyPrebuild && process.env.npm_config_arch) || os.arch()\n\tconst platform = (verifyPrebuild && process.env.npm_config_platform) || os.platform()\n\n\tlet runtime = 'node'\n\t// If node-api, then everything can share the same binary\n\tif (!isNodeApi) {\n\t\tif (verifyPrebuild && process.env.npm_config_runtime) {\n\t\t\truntime = process.env.npm_config_runtime\n\t\t} else if (isElectron()) {\n\t\t\truntime = 'electron'\n\t\t} else if (isNwjs()) {\n\t\t\truntime = 'node-webkit'\n\t\t}\n\t}\n\n\tconst candidates = []\n\n\tif (!verifyPrebuild) {\n\t\t// Try for a locally built binding\n\t\tcandidates.push(\n\t\t\tpath.join(basePath, 'build', 'Debug', `${options.name}.node`),\n\t\t\tpath.join(basePath, 'build', 'Release', `${options.name}.node`)\n\t\t)\n\t}\n\n\tlet libc = undefined\n\tif (isAlpine(platform)) libc = 'musl'\n\n\t// Look for prebuilds\n\tif (isNodeApi) {\n\t\t// Look for node-api versioned builds\n\t\tfor (const ver of options.napi_versions) {\n\t\t\tconst prebuildName = getPrebuildName({\n\t\t\t\tname: options.name,\n\t\t\t\tplatform,\n\t\t\t\tarch,\n\t\t\t\tlibc,\n\t\t\t\tnapi_version: ver,\n\t\t\t\truntime,\n\t\t\t\t// armv: options.armv ? (arch === 'arm64' ? '8' : vars.arm_version) : null,\n\t\t\t})\n\t\t\tcandidates.push(path.join(basePath, 'prebuilds', prebuildName))\n\t\t}\n\t} else {\n\t\tthrow new Error('Not implemented for NAN!')\n\t}\n\n\tlet foundPath = null\n\n\tfor (const candidate of candidates) {\n\t\tif (fs.existsSync(candidate)) {\n\t\t\tconst stat = fs.statSync(candidate)\n\t\t\tif (stat.isFile()) {\n\t\t\t\tfoundPath = candidate\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!foundPath && throwOnMissing) {\n\t\tconst candidatesStr = candidates.map((cand) => ` - ${cand}`).join('\\n')\n\t\tthrow new Error(`Failed to find binding for ${options.name}\\nTried paths:\\n${candidatesStr}`)\n\t}\n\n\treturn foundPath\n}\n\nfunction loadBinding(basePath, options) {\n\tconst foundPath = resolvePath(basePath, options, false, true)\n\n\t// Note: this error should not be hit, as resolvePath will throw if the binding is missing\n\tif (!foundPath) throw new Error(`Failed to find binding for ${options.name}`)\n\n\treturn runtimeRequire(foundPath)\n}\nloadBinding.resolve = resolvePath\n\nmodule.exports = loadBinding\n","\nconst EventEmitter = require(\"events\").EventEmitter;\nconst util = require(\"util\");\n\nlet driverType = null;\nfunction setDriverType(type) {\n    driverType = type;\n}\n\n// lazy load the C++ binding\nlet binding = null;\nfunction loadBinding() {\n    if (!binding) {\n        const options = require('./binding-options');\n        if (process.platform === \"linux\" && (!driverType || driverType === \"hidraw\")) {\n            options.name = 'HID_hidraw';\n        }\n        binding = require(\"pkg-prebuilds/bindings\")(__dirname, options);\n    }\n}\n\n//This class is a wrapper for `binding.HID` class\nfunction HID() {\n\n    // see issue #150 (enhancement, solves issue #149)\n    // throw an error for those who forget to instantiate, i.e. by \"*new* HID.HID()\"\n    // and who would otherwise be left trying to figure out why \"self.on is not a function\"\n    if (!new.target) {\n        throw new Error('HID() must be called with \\'new\\' operator');\n    }\n\n    //Inherit from EventEmitter\n    EventEmitter.call(this);\n\n    loadBinding();\n\n    /* We also want to inherit from `binding.HID`, but unfortunately,\n        it's not so easy for native Objects. For example, the\n        following won't work since `new` keyword isn't used:\n        `binding.HID.apply(this, arguments);`\n        So... we do this craziness instead...\n    */\n    var thisPlusArgs = new Array(arguments.length + 1);\n    thisPlusArgs[0] = null;\n    for(var i = 0; i < arguments.length; i++)\n        thisPlusArgs[i + 1] = arguments[i];\n    this._raw = new (Function.prototype.bind.apply(binding.HID,\n        thisPlusArgs) )();\n\n    /* Now we have `this._raw` Object from which we need to\n        inherit.  So, one solution is to simply copy all\n        prototype methods over to `this` and binding them to\n        `this._raw`\n    */\n    for(var i in binding.HID.prototype)\n        this[i] = binding.HID.prototype[i].bind(this._raw);\n\n    /* We are now done inheriting from `binding.HID` and EventEmitter.\n        Now upon adding a new listener for \"data\" events, we start\n        polling the HID device using `read(...)`\n        See `resume()` for more details. */\n    this._paused = true;\n    var self = this;\n    self.on(\"newListener\", function(eventName, listener) {\n        if(eventName == \"data\")\n            process.nextTick(self.resume.bind(self) );\n    });\n}\n//Inherit prototype methods\nutil.inherits(HID, EventEmitter);\n//Don't inherit from `binding.HID`; that's done above already!\n\nHID.prototype.close = function close() {\n    this._closing = true;\n    this.removeAllListeners();\n    if (this._paused) {\n        // Don't exit if a read is currently running\n        this._raw.close();\n        this._closed = true;\n    } else {\n        // Make sure the read is stopped ASAP\n        this._raw.readInterrupt();\n    }\n};\n//Pauses the reader, which stops \"data\" events from being emitted\nHID.prototype.pause = function pause() {\n    this._paused = true;\n    this._raw.readInterrupt();\n};\n\nHID.prototype.read = function read(callback) {\n    if (this._closed) {\n    throw new Error('Unable to read from a closed HID device');\n  } else {\n    return this._raw.read(callback);\n  }\n};\n\nHID.prototype.resume = function resume() {\n    var self = this;\n    if(self._paused && self.listeners(\"data\").length > 0)\n    {\n        //Start polling & reading loop\n        self._paused = false;\n        self.read(function readFunc(err, data) {\n            try {\n                if (self._closing) {\n                    // Discard any data if we're closing\n\n                    self._paused = true;\n                    self._raw.close();\n                    self._closed = true;\n\n                    return\n                }\n\n                if(err)\n                {\n                    //Emit error and pause reading\n                    self._paused = true;\n                    if(!self._closing)\n                        self.emit(\"error\", err);\n                    //else ignore any errors if I'm closing the device\n                }\n                else\n                {\n                    //If there are no \"data\" listeners, we pause\n                    if(self.listeners(\"data\").length <= 0)\n                        self._paused = true;\n                    //Keep reading if we aren't paused\n                    if(!self._paused)\n                        self.read(readFunc);\n                    //Now emit the event\n                    self.emit(\"data\", data);\n                }\n            } catch (e) {\n                // Emit an error on the device instead of propagating to a c++ exception\n                setImmediate(() => {\n                    if (!self._closing)\n                        self.emit(\"error\", e);\n                });\n            }\n        });\n    }\n};\n\nclass HIDAsync extends EventEmitter {\n    constructor(raw) {\n        super()\n\n        if (!(raw instanceof binding.HIDAsync)) {\n            throw new Error(`HIDAsync cannot be constructed directly. Use HIDAsync.open() instead`)\n        }\n\n        this._raw = raw\n\n        /* Now we have `this._raw` Object from which we need to\n            inherit.  So, one solution is to simply copy all\n            prototype methods over to `this` and binding them to\n            `this._raw`.\n            We explicitly wrap them in an async method, to ensure \n            that any thrown errors are promise rejections\n        */\n        for (let i in this._raw) {\n            this[i] = async (...args) => this._raw[i](...args);\n        }\n\n        /* Now upon adding a new listener for \"data\" events, we start\n            the read thread executing. See `resume()` for more details.\n        */\n        this.on(\"newListener\", (eventName, listener) =>{\n            if(eventName == \"data\")\n                process.nextTick(this.resume.bind(this) );\n        });\n        this.on(\"removeListener\", (eventName, listener) => {\n            if(eventName == \"data\" && this.listenerCount(\"data\") == 0)\n                process.nextTick(this.pause.bind(this) );\n        })\n    }\n\n    static async open(...args) {\n        loadBinding();\n        const native = await binding.openAsyncHIDDevice(...args);\n        return new HIDAsync(native)\n    }\n\n    async close() {\n        this._closing = true;\n        this.removeAllListeners();\n        await this._raw.close();\n        this._closed = true;\n    }\n    \n    //Pauses the reader, which stops \"data\" events from being emitted\n    pause() {\n        this._raw.readStop();\n    }\n\n    resume() {\n        if(this.listenerCount(\"data\") > 0)\n        {\n            //Start polling & reading loop\n            this._raw.readStart((err, data) => {\n                try {\n                    if (err) {\n                        if(!this._closing)\n                            this.emit(\"error\", err);\n                        //else ignore any errors if I'm closing the device\n                    } else {\n                        this.emit(\"data\", data);\n                    }\n                } catch (e) {\n                    // Emit an error on the device instead of propagating to a c++ exception\n                    setImmediate(() => {\n                        if (!this._closing)\n                            this.emit(\"error\", e);\n                    });\n                }\n            })\n        }\n    }\n}\n\nfunction showdevices() {\n    loadBinding();\n    return binding.devices.apply(HID,arguments);\n}\n\nfunction showdevicesAsync(...args) {\n    loadBinding();\n    return binding.devicesAsync(...args);\n}\n\n\n//Expose API\nexports.HID = HID;\nexports.HIDAsync = HIDAsync;\nexports.devices = showdevices;\nexports.devicesAsync = showdevicesAsync;\nexports.setDriverType = setDriverType;\n","/**\n * Pads the provided array to a specified length, adding the required\n * number of occurences of the padding element to the end of the array.\n *\n * @param {any[]} array The array to pad\n * @param {number} length The required length for the array after padding\n * @param {any} paddingElement The element to pad the array with\n * @returns {any[]} The array padded to the required length\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const padRight = (array, length, paddingElement) => {\n    if (array.length >= length) {\n        return array;\n    }\n    return [\n        ...array,\n        ...Array(length - array.length)\n            .fill([paddingElement])\n            .flat(),\n    ];\n};\n/**\n * Converts the provided integer into an array of two bytes, with the most\n * significant byte at the beginning of the array.\n *\n * Throws an error if the provided parameter is not an integer.\n *\n * @param {integer} integer The integer to convert into an array of bytes\n * @returns {[number, number]} The provided integer converted to an array\n * of type bytes, with the most significant byte at the beginning of the\n * array.\n */\nexport const integerToBytes = (integer) => {\n    if (!Number.isInteger(integer)) {\n        throw 'Provided value must be an integer';\n    }\n    return [Math.trunc(integer / 256), integer % 256];\n};\n/**\n * Finds a given percentage within a range - for example, the 50% marker\n * in the range 0 to 200 is 100.\n *\n * @param {number} percentage The percentage to find within the range\n * @param {number} startRange The number at the start of the range\n * @param {number} endRange The number at the end of the range\n * @returns {number} The value at the given percentage\n */\nexport const percentageWithinRange = (percentage, startRange, endRange) => {\n    return Math.round(Math.ceil(((percentage - 1) / (100 - 1)) * (endRange - startRange) + startRange));\n};\n/**\n * Finds all multiples of a given integer within a range. The returned\n * list of multiples may or may not include the values at the start and\n * the end of the range.\n *\n * For example:\n *   - the multiples of 3 within the range 0 to 10 are 0, 3, 6, 9\n *   - the multiples of 3 within the range 1 to 10 are 3, 6, 9\n *   - the multiples of 5 within the range 0 to 20 are 0, 5, 10, 15, 20\n *   - the multiples of 3 within the range 10 to 20 are 12, 15, 18\n *\n * @param {number} multiplesOf The integer to find multiples of\n * @param {number} startRange The integer at the start of the range\n * @param {number} endRange The integer at the end of the range\n * @returns {number[]} An array of all the multiples\n */\nexport const multiplesWithinRange = (multiplesOf, startRange, endRange) => {\n    if (!Number.isInteger(multiplesOf)) {\n        throw 'Provided value for `multiplesOf` must be an integer';\n    }\n    if (!Number.isInteger(startRange)) {\n        throw 'Provided value for `startRange` must be an integer';\n    }\n    if (!Number.isInteger(endRange)) {\n        throw 'Provided value for `endRange` must be an integer';\n    }\n    const inclusiveIntegersWithinRange = Array(endRange - startRange + 1)\n        .fill([])\n        .map((_, idx) => startRange + idx);\n    return inclusiveIntegersWithinRange.filter((integer) => integer % multiplesOf === 0);\n};\n","import HID from 'node-hid';\nimport { integerToBytes, multiplesWithinRange, padRight, percentageWithinRange, } from './utils';\nexport var DeviceType;\n(function (DeviceType) {\n    DeviceType[\"LitraGlow\"] = \"litra_glow\";\n    DeviceType[\"LitraBeam\"] = \"litra_beam\";\n    DeviceType[\"LitraBeamLX\"] = \"litra_beam_lx\";\n})(DeviceType || (DeviceType = {}));\nconst VENDOR_ID = 0x046d;\nconst PRODUCT_IDS = [\n    0xc900, // Litra Glow\n    0xc901, // Litra Beam\n    0xb901, // Litra Beam\n    0xc903, // Litra Beam LX\n];\nconst USAGE_PAGE = 0xff43;\nconst MINIMUM_BRIGHTNESS_IN_LUMEN_BY_DEVICE_TYPE = {\n    [DeviceType.LitraGlow]: 20,\n    [DeviceType.LitraBeam]: 30,\n    [DeviceType.LitraBeamLX]: 30,\n};\nconst MAXIMUM_BRIGHTNESS_IN_LUMEN_BY_DEVICE_TYPE = {\n    [DeviceType.LitraGlow]: 250,\n    [DeviceType.LitraBeam]: 400,\n    [DeviceType.LitraBeamLX]: 400,\n};\nconst MULTIPLES_OF_100_BETWEEN_2700_AND_6500 = multiplesWithinRange(100, 2700, 6500);\nconst ALLOWED_TEMPERATURES_IN_KELVIN_BY_DEVICE_TYPE = {\n    [DeviceType.LitraGlow]: MULTIPLES_OF_100_BETWEEN_2700_AND_6500,\n    [DeviceType.LitraBeam]: MULTIPLES_OF_100_BETWEEN_2700_AND_6500,\n    [DeviceType.LitraBeamLX]: MULTIPLES_OF_100_BETWEEN_2700_AND_6500,\n};\nconst NAME_BY_DEVICE_TYPE = {\n    [DeviceType.LitraGlow]: 'Logitech Litra Glow',\n    [DeviceType.LitraBeam]: 'Logitech Litra Beam',\n    [DeviceType.LitraBeamLX]: 'Logitech Litra Beam LX',\n};\nconst isLitraDevice = (device) => {\n    return (device.vendorId === VENDOR_ID &&\n        PRODUCT_IDS.includes(device.productId) &&\n        device.usagePage === USAGE_PAGE);\n};\nconst hidDeviceToDevice = (hidDevice) => {\n    return {\n        type: getDeviceTypeByProductId(hidDevice.productId),\n        hid: new HID.HID(hidDevice.path),\n        serialNumber: hidDevice.serialNumber,\n    };\n};\n/**\n * Finds your Logitech Litra device and returns it. Returns `null` if a\n * supported device cannot be found connected to your computer.\n *\n * @returns {Device, null} An object representing your Logitech Litra device,\n * passed into other functions like `turnOn` and `setTemperatureInKelvin` -\n * or `null` if a matching device cannot be found connected to your computer.\n */\nexport const findDevice = () => {\n    const matchingDevice = HID.devices().find(isLitraDevice);\n    if (matchingDevice) {\n        return hidDeviceToDevice(matchingDevice);\n    }\n    else {\n        return null;\n    }\n};\n/**\n * Finds one or more Logitech Litra devices and returns them.\n * Returns an empty `Array` if no supported devices could be found\n * connected to your computer.\n *\n * @returns {Device[], null} An Array representing your Logitech Litra devices,\n * passed into other functions like `turnOn` and `setTemperatureInKelvin`. The\n * Array will be empty if no matching devices could be found connected to your computer.\n */\nexport const findDevices = () => {\n    const matchingDevices = HID.devices().filter(isLitraDevice);\n    return matchingDevices.map(hidDeviceToDevice);\n};\nconst generateTurnOnBytes = (device) => {\n    if (device.type === DeviceType.LitraBeamLX) {\n        return padRight([0x11, 0xff, 0x06, 0x1c, 0x01], 20, 0x00);\n    }\n    else {\n        return padRight([0x11, 0xff, 0x04, 0x1c, 0x01], 20, 0x00);\n    }\n};\n/**\n * Turns your Logitech Litra device on\n *\n * @param {Device} device The device to turn on\n */\nexport const turnOn = (device) => {\n    const bytes = generateTurnOnBytes(device);\n    device.hid.write(bytes);\n};\nconst generateTurnOffBytes = (device) => {\n    if (device.type === DeviceType.LitraBeamLX) {\n        return padRight([0x11, 0xff, 0x06, 0x1c, 0x00], 20, 0x00);\n    }\n    else {\n        return padRight([0x11, 0xff, 0x04, 0x1c, 0x00], 20, 0x00);\n    }\n};\n/**\n * Turns your Logitech Litra device off\n *\n * @param {Device} device The device to turn off\n */\nexport const turnOff = (device) => {\n    const bytes = generateTurnOffBytes(device);\n    device.hid.write(bytes);\n};\n/**\n * Toggles your Logitech Litra device on or off\n *\n * @param {Device} device The device to toggle on or off\n */\nexport const toggle = (device) => {\n    if (isOn(device)) {\n        turnOff(device);\n    }\n    else {\n        turnOn(device);\n    }\n};\nconst generateIsOnBytes = (device) => {\n    if (device.type === DeviceType.LitraBeamLX) {\n        return padRight([0x11, 0xff, 0x06, 0x01], 20, 0x00);\n    }\n    else {\n        return padRight([0x11, 0xff, 0x04, 0x01], 20, 0x00);\n    }\n};\n/**\n * Gets the current power state of your Logitech Litra device\n *\n * @param {Device} device The device to get the current power state for\n * @returns {boolean} Current power state where true = on and false = off\n */\nexport const isOn = (device) => {\n    const bytes = generateIsOnBytes(device);\n    device.hid.write(bytes);\n    const data = device.hid.readSync();\n    return data[4] === 1;\n};\nconst generateSetTemperatureInKelvinBytes = (device, temperatureInKelvin) => {\n    if (device.type === DeviceType.LitraBeamLX) {\n        return padRight([0x11, 0xff, 0x06, 0x9c, ...integerToBytes(temperatureInKelvin)], 20, 0x00);\n    }\n    else {\n        return padRight([0x11, 0xff, 0x04, 0x9c, ...integerToBytes(temperatureInKelvin)], 20, 0x00);\n    }\n};\n/**\n * Sets the temperature of your Logitech Litra device\n *\n * @param {Device} device The device to set the temperature of\n * @param {number} temperatureInKelvin The temperature to set in Kelvin. Only\n *   multiples of 100 between the device's minimum and maximum temperatures\n *   are allowed. Use the `getMinimumTemperatureInKelvinForDevice` and\n *   `getMaximumTemperatureInKelvinForDevice` functions to get the minimum\n *   and maximum temperature for your device.\n */\nexport const setTemperatureInKelvin = (device, temperatureInKelvin) => {\n    if (!Number.isInteger(temperatureInKelvin)) {\n        throw 'Provided temperature must be an integer';\n    }\n    const minimumTemperature = getMinimumTemperatureInKelvinForDevice(device);\n    const maximumTemperature = getMaximumTemperatureInKelvinForDevice(device);\n    const allowedTemperatures = getAllowedTemperaturesInKelvinForDevice(device);\n    if (!allowedTemperatures.includes(temperatureInKelvin)) {\n        throw `Provided temperature must be a multiple of 100 between ${minimumTemperature} and ${maximumTemperature} for this device`;\n    }\n    const bytes = generateSetTemperatureInKelvinBytes(device, temperatureInKelvin);\n    device.hid.write(bytes);\n};\nconst generateGetTemperatureInKelvinBytes = (device) => {\n    if (device.type === DeviceType.LitraBeamLX) {\n        return padRight([0x11, 0xff, 0x06, 0x81], 20, 0x00);\n    }\n    else {\n        return padRight([0x11, 0xff, 0x04, 0x81], 20, 0x00);\n    }\n};\n/**\n * Gets the temperature of your Logitech Litra device\n *\n * @param {Device} device The device to get the temperature for\n * @returns {number} The current temperature in Kelvin\n */\nexport const getTemperatureInKelvin = (device) => {\n    const bytes = generateGetTemperatureInKelvinBytes(device);\n    device.hid.write(bytes);\n    const data = device.hid.readSync();\n    // data[4] is the multiple of 256\n    // data[5] is the remainder of 256\n    // together they come out to the temp in K\n    return data[4] * 256 + data[5];\n};\nconst generateSetBrightnessInLumenBytes = (device, brightnessInLumen) => {\n    if (device.type === DeviceType.LitraBeamLX) {\n        return padRight([0x11, 0xff, 0x06, 0x4c, ...integerToBytes(brightnessInLumen)], 20, 0x00);\n    }\n    else {\n        return padRight([0x11, 0xff, 0x04, 0x4c, ...integerToBytes(brightnessInLumen)], 20, 0x00);\n    }\n};\n/**\n * Sets the brightness of your Logitech Litra device, measured in Lumen\n *\n * @param {Device} device The device to set the brightness of\n * @param {number} brightnessInLumen The brightness to set in Lumen. Use the\n *  `getMinimumBrightnessInLumenForDevice` and `getMaximumBrightnessInLumenForDevice`\n *  functions to get the minimum and maximum brightness for your device.\n */\nexport const setBrightnessInLumen = (device, brightnessInLumen) => {\n    if (!Number.isInteger(brightnessInLumen)) {\n        throw 'Provided brightness must be an integer';\n    }\n    const minimumBrightness = getMinimumBrightnessInLumenForDevice(device);\n    const maximumBrightness = getMaximumBrightnessInLumenForDevice(device);\n    if (brightnessInLumen < minimumBrightness || brightnessInLumen > maximumBrightness) {\n        throw `Provided brightness must be between ${minimumBrightness} and ${maximumBrightness} for this device`;\n    }\n    const bytes = generateSetBrightnessInLumenBytes(device, brightnessInLumen);\n    device.hid.write(bytes);\n};\nconst generateGetBrightnessInLumenBytes = (device) => {\n    if (device.type === DeviceType.LitraBeamLX) {\n        return padRight([0x11, 0xff, 0x06, 0x31], 20, 0x00);\n    }\n    else {\n        return padRight([0x11, 0xff, 0x04, 0x31], 20, 0x00);\n    }\n};\n/**\n * Gets the current brightness of your Logitech Litra device, measured in Lumen\n *\n * @param {Device} device The device to get the current brightness for\n * @returns {number} The current brightness in Lumen\n */\nexport const getBrightnessInLumen = (device) => {\n    const bytes = generateGetBrightnessInLumenBytes(device);\n    device.hid.write(bytes);\n    const data = device.hid.readSync();\n    return data[5];\n};\n/**\n * Set the brightness of your Logitech Litra device to a percentage\n * of the device's maximum brightness\n *\n * @param {Device} device The device to set the brightness of\n * @param {number} brightnessPercentage The percentage to set the brightness to\n */\nexport const setBrightnessPercentage = (device, brightnessPercentage) => {\n    if (brightnessPercentage < 0 || brightnessPercentage > 100) {\n        throw 'Percentage must be between 0 and 100';\n    }\n    const minimumBrightness = getMinimumBrightnessInLumenForDevice(device);\n    const maximumBrightness = getMaximumBrightnessInLumenForDevice(device);\n    return setBrightnessInLumen(device, brightnessPercentage === 0\n        ? minimumBrightness\n        : percentageWithinRange(brightnessPercentage, minimumBrightness, maximumBrightness));\n};\n/**\n * Gets the type of a Logitech Litra device by its product IOD\n *\n * @param {number} productId The product ID of the device\n * @returns {DeviceType} The type of the device\n */\nconst getDeviceTypeByProductId = (productId) => {\n    switch (productId) {\n        case PRODUCT_IDS[0]:\n            return DeviceType.LitraGlow;\n        case PRODUCT_IDS[1]:\n        case PRODUCT_IDS[2]:\n            return DeviceType.LitraBeam;\n        case PRODUCT_IDS[3]:\n            return DeviceType.LitraBeamLX;\n        default:\n            throw 'Unknown device type';\n    }\n};\n/**\n * Gets the minimum brightness in Lumen supported by a device\n *\n * @param {Device} device The device to check the minimum brightness for\n * @returns {number} The minimum brightness in Lumen supported by the device\n */\nexport const getMinimumBrightnessInLumenForDevice = (device) => {\n    return MINIMUM_BRIGHTNESS_IN_LUMEN_BY_DEVICE_TYPE[device.type];\n};\n/**\n * Gets the maximum brightness in Lumen supported by a device\n *\n * @param {Device} device The device to check the maximum brightness for\n * @returns {number} The maximum brightness in Lumen supported by the device\n */\nexport const getMaximumBrightnessInLumenForDevice = (device) => {\n    return MAXIMUM_BRIGHTNESS_IN_LUMEN_BY_DEVICE_TYPE[device.type];\n};\n/**\n * Gets the minimum temperature in Kelvin supported by a device\n *\n * @param {Device} device The device to check the minimum temperature for\n * @returns {number} The minimum temperature in Kelvin supported by the device\n */\nexport const getMinimumTemperatureInKelvinForDevice = (device) => {\n    return ALLOWED_TEMPERATURES_IN_KELVIN_BY_DEVICE_TYPE[device.type][0];\n};\n/**\n * Gets the maximum temperature in Kelvin supported by a device\n *\n * @param {Device} device The device to check the maximum temperature for\n * @returns {number} The maximum temperature in Kelvin supported by the device\n */\nexport const getMaximumTemperatureInKelvinForDevice = (device) => {\n    const allowedTemperatures = ALLOWED_TEMPERATURES_IN_KELVIN_BY_DEVICE_TYPE[device.type];\n    return allowedTemperatures[allowedTemperatures.length - 1];\n};\n/**\n * Gets all temperature values in Kelvin supported by a device\n *\n * @param {Device} device The device to check the allowed temperatures for\n * @returns {number[]} The temperature values in Kelvin supported by the device\n */\nexport const getAllowedTemperaturesInKelvinForDevice = (device) => {\n    return ALLOWED_TEMPERATURES_IN_KELVIN_BY_DEVICE_TYPE[device.type];\n};\n/**\n * Gets the name of a device\n *\n * @param {Device} device The device to get the name for\n * @returns {string} The name of the device, e.g. \"Logitech Litra Glow\"\n */\nexport const getNameForDevice = (device) => {\n    return NAME_BY_DEVICE_TYPE[device.type];\n};\n"],"names":["fs","require$$0","path","require$$2","require$$3","require","require$$1"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5]}